% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dimensional_reduction_gcca.R
\name{RunGCCA}
\alias{RunGCCA}
\title{Perform Canonical Correlation Analysis}
\usage{
RunGCCA(objects, group.by, num.cc = 20, genes.use, scale.data = TRUE,
  rescale.groups = FALSE, rgcca.tol = 0.001, ...)
}
\arguments{
\item{objects}{list of Seurat objects, or a single Seurat object if group.by will be used}

\item{group.by}{Factor to group by (column vector stored in object@meta.data)}

\item{num.cc}{Number of canonical vectors to calculate}

\item{genes.use}{Set of genes to use in CCA. Default is object@var.genes. If
two objects are given, the default is the union of both variable gene sets
that are also present in both objects.}

\item{scale.data}{Use the scaled data from the object}

\item{rescale.groups}{Rescale each set of cells independently}

\item{rgcca.tol}{tol parameter for RGCCA::rgcca()}

\item{...}{Extra parameters to MergeSeurat}
}
\value{
Returns Seurat object with the CCA stored in the @dr$cca slot. If
one object is passed, the same object is returned. If two or more are passed, a
combined object is returned.
}
\description{
Runs a canonical correlation analysis using a diagonal implementation of CCA.
For details about stored CCA calculation parameters, see
\code{PrintCCAParams}.
}
\examples{
pbmc_small
# As GCCA works with more than two datasets, we will split our test object into two just for this example
pbmc1 <- SubsetData(pbmc_small,cells.use = pbmc_small@cell.names[1:30])
pbmc2 <- SubsetData(pbmc_small,cells.use = pbmc_small@cell.names[31:60])
pbmc3 <- SubsetData(pbmc_small,cells.use = pbmc_small@cell.names[61:90])
pbmc1@meta.data$group <- "group1"
pbmc2@meta.data$group <- "group2"
pbmc3@meta.data$group <- "group3"
pbmc_cca <- RunGCCA(list(pbmc1,pbmc2,pbmc3))
# Print results
PrintDim(pbmc_cca,reduction.type = 'gcca')

}
\seealso{
\code{MergeSeurat} \code{RunCCA}
}
